---
title: "Work Magnet monitoring"
format: 
  dashboard:
    embed-resources: true
    orientation: columns
    theme: 
      - flatly 
      - custom.scss
---

```{r}
#| include: false


## Packages
pacman::p_load(
  quarto,
  tidyverse, 
  rio, 
  here,
  DT, 
  lubridate, 
  plotly, 
  matchmaker, 
  reactable, 
  janitor, 
  forcats, 
  plotly
)


## Données
work_magnet_all <- import(here("data", "work_magnet_all.csv"))


## Thesaurus ror pour institutions de recherche
thesaurus <- import(here("data", "thesaurus_ror.csv"))


## Information mises à jour
maj <- file.info(here("data", "work_magnet_su.csv"))$ctime
maj <- format(maj, format = "%d/%m/%Y")  


## Préparation des données 
work_magnet_su <- work_magnet_all %>% 
  filter(contact_domain == "sorbonne-universite.fr")

```

# Activités GT OpenAlex {}

## {width="10%"}

```{r}
demandes <- work_magnet_su %>% 
  count() %>% 
  paste()

traitees <-  work_magnet_su %>% 
  filter(!is.na(date_closed)) %>% 
  count() %>% 
  paste()

en_cours <- work_magnet_su %>% 
  filter(is.na(date_closed)) %>% 
  count() %>% 
  paste()
```

```{r}
#| content: valuebox
#| title: "Demandes de correction soumises" 
list(
  value = demandes,
  icon = "box-arrow-in-up",
  color = "vb-primary"
)
```
```{r}
#| content: valuebox
#| title: "Demandes en cours"
list(
  value = en_cours, 
  icon = "arrow-repeat",
  color = "vb-info"
)
```
```{r}
#| content: valuebox
#| title: "Demandes traitées"
list(
  value = traitees,
  icon = "check-circle",
  color = "vb-success"
)
```


## {width="55%"}

### {.tabset title="Demandes de corrections soumises (par mois)"}

```{r}
#| title: "2025"
#| out-height: "50%"


monthly_breaks <- seq.Date(
  from = as.Date("2025-01-01"), 
  to = as.Date("2025-12-31"), 
  by = "months")


p <- work_magnet_su %>% 
  filter(year(date_opened) == 2025) %>% 
  ggplot() +
  aes(x = date_opened) + 
  geom_histogram(
    breaks = monthly_breaks, 
    color = "white", 
    fill = "#1D2769") +
  theme_classic() +
  theme(axis.text = element_text(size = 15)) +
  scale_x_date(date_breaks = "1 months",
               date_labels = "%b") +
  scale_y_continuous(expand = c(0,0)) +
  labs(x = "", 
       y = "")
ggplotly(p)
```

```{r}
#| title: "2024"
#| out-height: "50%"


monthly_breaks <- seq.Date(
  from = as.Date("2024-01-01"), 
  to = as.Date("2024-12-31"), 
  by = "months")


p <- work_magnet_su %>% 
  filter(year(date_opened) == 2024) %>% 
  ggplot() +
  aes(x = date_opened) + 
  geom_histogram(
    breaks = monthly_breaks,
    color = "white",
    fill = "#1D2769") +
  theme_classic() +
  theme(axis.text = element_text(size = 15)) +
  scale_x_date(date_breaks = "1 months",
               date_labels = "%b") +
  scale_y_continuous(expand = c(0,0)) +
  labs(x = "", 
       y = "")
ggplotly(p)
```

### {.tabset title="Demandes non corrigées (par mois)"}

```{r}
#| title: "2025"
#| out-height: "50%"


monthly_breaks <- seq.Date(
  from = as.Date("2025-01-01"), 
  to = as.Date("2025-12-31"), 
  by = "months")


p <- work_magnet_su %>% 
  filter(year(date_opened) == 2025) %>% 
  filter(is.na(date_closed)) %>% 
  ggplot() +
  aes(x = date_opened) + 
  geom_histogram(
    breaks = monthly_breaks,
    color = "white",
    fill = "#1D2769") +
  theme_classic() +
  theme(axis.text = element_text(size = 15)) +
  scale_x_date(date_breaks = "1 months",
               date_labels = "%b") +
  scale_y_continuous(expand = c(0,0)) +
  labs(x = "", 
       y = "")
ggplotly(p)
```

```{r}
#| title: "2024"
#| out-heigth: "50%"


monthly_breaks <- seq.Date(
  from = as.Date("2024-01-01"), 
  to = as.Date("2024-12-31"), 
  by = "months")


p <- work_magnet_su %>% 
  filter(year(date_opened) == 2024) %>% 
  filter(is.na(date_closed)) %>% 
  ggplot() +
  aes(x = date_opened) + 
  geom_histogram(
    breaks = monthly_breaks,
    color = "white",
    fill = "#1D2769") +
  theme_classic() +
  theme(axis.text = element_text(size = 15)) +
  scale_x_date(date_breaks = "1 months",
               date_labels = "%b") +
  scale_y_continuous(expand = c(0,0)) +
  labs(x = "", 
       y = "")
ggplotly(p)
```

## {width="35%"}

```{r}
work_magnet_su %>% 
  filter(state == "open") %>% 
  select(github_issue_id, added_rors, date_opened) %>% 
  reactable(
    striped = TRUE, 
    pagination = FALSE,
    showSortable = TRUE,
    columns = list(github_issue_id = colDef(align = "left"))
    )
```

# Sorbonne université

```{r}


p <- work_magnet_all %>% 
  filter(grepl("02en5vm52", removed_rors)) %>% 
  count(contact_domain) %>% 
  ggplot() +
  aes(y = contact_domain,
      x = n) +
  geom_col() +
  theme_classic() +
  theme(axis.text = element_text(size = 15)) +
  scale_x_continuous(
    expand = c(0, 0),
    breaks = seq(from = 0, to = 15, by = 1)) +
  scale_y_discrete(expand = c(0, 0)) +
  labs(x = "", 
       y = "")
ggplotly(p)
```

## {ror manquants corrigés (au total)}

```{r}
#| title: "Publications récupérées (par institutions de recherche)"


work_magnet_su %>% 
  filter(!is.na(date_closed)) %>% 
  mutate(added_rors = str_remove(added_rors, pattern = "02en5vm52;")) %>% 
  mutate(added_rors = str_remove(added_rors, pattern = ";02en5vm52")) %>% 
  separate_rows(openalex_works_examples, sep = ";") %>% 
  group_by(added_rors) %>% 
  count() %>% 
  match_df(dictionary = thesaurus, 
           from = "from", 
           to = "to", 
           by = "col") %>%
  filter(!is.na(added_rors)) %>% 
  arrange(desc(n)) %>% 
  adorn_totals(where = "row") %>% 
  reactable(
    striped = TRUE, 
    pagination = FALSE,
    height = 600
    ) 
  
```

```{r}
#| title: "Demandes de correction (par institutions de recherche)"


work_magnet_su %>% 
  filter(!is.na(date_closed)) %>% 
  mutate(added_rors = str_remove(added_rors, pattern = "02en5vm52;")) %>% 
  mutate(added_rors = str_remove(added_rors, pattern = ";02en5vm52")) %>% 
  separate_rows(added_rors, sep = ";") %>% 
  group_by(added_rors) %>% 
  count() %>% 
  match_df(dictionary = thesaurus, 
           from = "from", 
           to = "to", 
           by = "col") %>% 
  filter(!is.na(added_rors)) %>% 
  arrange(desc(n)) %>% 
  adorn_totals(where = "row") %>% 
  reactable(
    striped = TRUE, 
    pagination = FALSE,
    height = 600)
```

# Structures de recherche 

## {.sidebar} 

## {width="60%"}

```{r}
#| title: "Affiliations corrigées par structures"


p <- work_magnet_su %>% 
  filter(!is.na(date_closed)) %>% 
  mutate(added_rors = str_remove(added_rors, pattern = "02en5vm52;")) %>% 
  mutate(added_rors = str_remove(added_rors, pattern = ";02en5vm52")) %>% 
  separate_rows(added_rors, sep = ";") %>% 
  group_by(added_rors) %>% 
  count() %>% 
  match_df(dictionary = thesaurus, 
           from = "from", 
           to = "to", 
           by = "col") %>% 
  filter(!is.na(added_rors)) %>% 
  ggplot() +
  aes(y = fct_rev(fct_infreq(added_rors, n)), x = n) + 
  geom_col(color = "white", fill = "#1D2769") +
  theme_classic() +
  labs(x = "", 
       y = "")
ggplotly(p)
```

## {width="40%"}

```{r}


work_magnet_su %>% 
  select(added_rors, raw_affiliation_name) %>%
  reactable(
    pagination = FALSE, 
    striped = TRUE)
```





